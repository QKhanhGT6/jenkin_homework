pipeline {
    agent any

    environment {
        REPO_URL = 'https://github.com/QKhanhGT6/jenkin_homework.git'
        VENV_DIR = 'venv'
    }

    stages {
        stage('Cleanup') {
            steps {
                script {
                    // Stop any running instance of the application
                    sh 'pkill -f "uvicorn main:app" || true'
                }
            }
        }

        stage('Checkout') {
            steps {
                // Explicitly checkout the repository
                git branch: 'main', url: env.REPO_URL
            }
        }

        stage('Set Up Virtual Environment') {
            steps {
                script {
                    sh '''
                    python3 -m venv ${VENV_DIR} || true
                    . ${VENV_DIR}/bin/activate
                    pip install --upgrade pip || true
                    '''
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh '''
                    . ${VENV_DIR}/bin/activate
                    pip install -r requirements.txt
                    '''
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh '''
                    . ${VENV_DIR}/bin/activate
                    pytest --junitxml=test-results.xml
                    '''
                }
            }
        }

        stage('Run Application') {
            steps {
                script {
                    sh '''
                    . ${VENV_DIR}/bin/activate
                    nohup uvicorn main:app --host 0.0.0.0 --port 8000 &
                    '''
                }
            }
        }
    }

    post {
        always {
            // Publish results to GitHub Checks
            script {
                githubCheck 'Build and Tests', currentBuild.result, 'Jenkins build and test results'
            }
        }
        success {
            echo 'Build and tests succeeded.'
        }
        failure {
            echo 'Build or tests failed.'
        }
    }
}

def githubCheck(name, conclusion, details) {
    publishChecks name: name,
                  status: 'COMPLETED',
                  conclusion: conclusion == 'SUCCESS' ? 'SUCCESS' : 'FAILURE',
                  detailsURL: env.BUILD_URL,
                  output: [
                      title: name,
                      summary: details
                  ]
}
